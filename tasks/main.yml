---
# title: samba-ad-dc
#

# Idempotent way to build a /etc/hosts file with Ansible using your Ansible hosts inventory for a source.
# Will include all hosts the playbook is run on.
# Inspired from http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html

# Always run shared tasks:
- name: Assert this host must have a smb_role
  ansible.builtin.assert:
    that:
      - "'samba_ad_dc_servers' in group_names"
      - hostvars[inventory_hostname]['smb_role'] is defined
    fail_msg: "this host has no smb_role"
    success_msg: "pre-requisites met"

- name: Set this host's smb_role into a fact
  ansible.builtin.set_fact:
    smb_role: "{{ hostvars[inventory_hostname]['smb_role'] }}"

- name: Print this host's smb_role
  ansible.builtin.debug:
    msg:
      - "This host is: {{ smb_role }}"

# This include_vars allows you to keep your vaulted variables outside of your main repo
# It assumes the PRIVATE_REPO environment variable is set to the path of your private repo
# On home-infra, this is done by firstrun.sh.
# However, this role will not break if you do not have these
- name: Include vaulted password file
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ lookup('env', 'PRIVATE_REPO') | default('~') }}/ansible-vault/{{ ansible_role_name }}-vars.yml"
      skip: true


- name: Always import shared tasks
  ansible.builtin.import_tasks: debian-bookworm-shared.yml

- name: For Debian bookworm - primary
  ansible.builtin.import_tasks: debian-bookworm-primary.yml
  when:
    - smb_role == "primary"
    - ansible_architecture == "x86_64"
    - ansible_distribution_release == "bookworm"

- name: For Debian bookworm - additional
  ansible.builtin.import_tasks: debian-bookworm-additional.yml
  when:
    - smb_role == "additional"
    - ansible_distribution_release == "bookworm"
    - ansible_architecture == "x86_64"

# - name: Import tasks to set sysvol sync
#   ansible.builtin.import_tasks: sysvol-sync.yml
#   when:
#     -
